{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shehr\\\\OneDrive\\\\Desktop\\\\New folder\\\\FoodApp\\\\src\\\\store\\\\CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport CartContext from './cart-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  total_amt: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const updatedItems = state.items.concat(action.item);\n    const updatedAmt = state.total_amt + action.item.price * action.item.amt;\n    return {\n      items: updatedItems,\n      total_amt: updatedAmt\n    };\n  }\n\n  return defaultCartState;\n};\n\nfunction CartProvider(props) {\n  _s();\n\n  const [cartState, dispatchCartAciton] = useReducer(cartReducer, defaultCartState);\n\n  const addItemtoHandler = item => {\n    dispatchCartAciton({\n      type: \"ADD\",\n      item: item\n    });\n  };\n\n  const removeItemHandler = id => {\n    dispatchCartAciton({\n      type: \"REMOVE\",\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    amt: cartState.total_amt,\n    addItem: addItemtoHandler,\n    removeItem: removeItemHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CartProvider, \"z3xG3F0bH5DmPrEmvcmTSn+GTm0=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["C:/Users/shehr/OneDrive/Desktop/New folder/FoodApp/src/store/CartProvider.js"],"names":["React","useReducer","CartContext","defaultCartState","items","total_amt","cartReducer","state","action","type","updatedItems","concat","item","updatedAmt","price","amt","CartProvider","props","cartState","dispatchCartAciton","addItemtoHandler","removeItemHandler","id","cartContext","addItem","removeItem","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AAIA,MAAMC,gBAAgB,GAAG;AACrBC,EAAAA,KAAK,EAAC,EADe;AAErBC,EAAAA,SAAS,EAAC;AAFW,CAAzB;;AAIA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAOC,MAAP,KAAgB;AAChC,MAAGA,MAAM,CAACC,IAAP,KAAc,KAAjB,EAAuB;AACnB,UAAMC,YAAY,GAAGH,KAAK,CAACH,KAAN,CAAYO,MAAZ,CAAmBH,MAAM,CAACI,IAA1B,CAArB;AACA,UAAMC,UAAU,GAAGN,KAAK,CAACF,SAAN,GAAkBG,MAAM,CAACI,IAAP,CAAYE,KAAZ,GAAoBN,MAAM,CAACI,IAAP,CAAYG,GAArE;AACA,WAAM;AACFX,MAAAA,KAAK,EAAEM,YADL;AAEFL,MAAAA,SAAS,EAAEQ;AAFT,KAAN;AAIH;;AACD,SAAOV,gBAAP;AACH,CAVD;;AAaA,SAASa,YAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AAGzB,QAAM,CAACC,SAAD,EAAWC,kBAAX,IAAiClB,UAAU,CAACK,WAAD,EAAaH,gBAAb,CAAjD;;AAEA,QAAMiB,gBAAgB,GAAKR,IAAD,IAAS;AAE/BO,IAAAA,kBAAkB,CAAC;AAACV,MAAAA,IAAI,EAAC,KAAN;AAAYG,MAAAA,IAAI,EAACA;AAAjB,KAAD,CAAlB;AACH,GAHD;;AAIA,QAAMS,iBAAiB,GAAIC,EAAD,IAAO;AAC7BH,IAAAA,kBAAkB,CAAC;AAACV,MAAAA,IAAI,EAAC,QAAN;AAAea,MAAAA,EAAE,EAACA;AAAlB,KAAD,CAAlB;AACH,GAFD;;AAKA,QAAMC,WAAW,GAAG;AAChBnB,IAAAA,KAAK,EAACc,SAAS,CAACd,KADA;AAEhBW,IAAAA,GAAG,EAACG,SAAS,CAACb,SAFE;AAGhBmB,IAAAA,OAAO,EAAEJ,gBAHO;AAIhBK,IAAAA,UAAU,EAAEJ;AAJI,GAApB;AAOF,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEE,WAA7B;AAAA,cACKN,KAAK,CAACS;AADX;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GA1BQV,Y;;KAAAA,Y;AA4BT,eAAeA,YAAf","sourcesContent":["import React , {useReducer} from 'react'\r\nimport CartContext from './cart-context'\r\n\r\n\r\n\r\nconst defaultCartState = {\r\n    items:[],\r\n    total_amt:0\r\n}\r\nconst cartReducer = (state,action)=>{\r\n    if(action.type==='ADD'){\r\n        const updatedItems = state.items.concat(action.item)\r\n        const updatedAmt = state.total_amt + action.item.price * action.item.amt\r\n        return{\r\n            items: updatedItems,\r\n            total_amt: updatedAmt\r\n        }\r\n    }\r\n    return defaultCartState\r\n}\r\n\r\n\r\nfunction CartProvider(props) {\r\n\r\n\r\n    const [cartState,dispatchCartAciton] = useReducer(cartReducer,defaultCartState)\r\n\r\n    const addItemtoHandler =  (item) =>{\r\n\r\n        dispatchCartAciton({type:\"ADD\",item:item})\r\n    }\r\n    const removeItemHandler = (id) =>{\r\n        dispatchCartAciton({type:\"REMOVE\",id:id})\r\n    }\r\n\r\n\r\n    const cartContext = {\r\n        items:cartState.items,\r\n        amt:cartState.total_amt,\r\n        addItem: addItemtoHandler,\r\n        removeItem: removeItemHandler    \r\n    }\r\n\r\n  return (\r\n    <CartContext.Provider value={cartContext}>\r\n        {props.children}\r\n    </CartContext.Provider>\r\n  )\r\n}\r\n\r\nexport default CartProvider"]},"metadata":{},"sourceType":"module"}