{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shehr\\\\OneDrive\\\\Desktop\\\\New folder\\\\FoodApp\\\\src\\\\Components\\\\Cart\\\\Checkout.js\",\n    _s = $RefreshSig$();\n\nimport react, { useRef, useState } from 'react';\nimport classes from './Checkout.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isEmpty = value => value.trim() === '';\n\nconst isFiveChars = value => value.trim().length === 5;\n\nconst Checkout = props => {\n  _s();\n\n  const [formInputValidity, setFormInputValidity] = useState({\n    name: true,\n    street: true,\n    postal: true,\n    city: true\n  });\n  const nameInput = useRef();\n  const streetInput = useRef();\n  const postalInput = useRef();\n  const cityInput = useRef();\n\n  const confirmHandler = event => {\n    event.preventDefault();\n    const eneteredName = nameInput.current.value;\n    const eneteredStreet = streetInput.current.value;\n    const enteredPostal = postalInput.current.value;\n    const eneteredCity = cityInput.current.value; // console.log(eneteredName,eneteredCity,eneteredStreet,enteredPostal)\n\n    const nameValid = !isEmpty(eneteredName);\n    const streetValid = !isEmpty(eneteredStreet);\n    const postalValid = isFiveChars(enteredPostal) && !isEmpty(enteredPostal);\n    const cityValid = !isEmpty(eneteredCity); // console.log(eneteredName,eneteredCity)\n    // const nameValid = false\n    // const streetValid = false\n    // const postalValid = false\n    // const cityValid = false\n\n    setFormInputValidity({\n      name: nameValid,\n      street: streetValid,\n      postal: postalValid,\n      city: cityValid\n    });\n    const formValid = nameValid && streetValid && postalValid && cityValid;\n\n    if (!formValid) {\n      return;\n    }\n\n    console.log('run 1');\n    props.onConfirm({\n      name: eneteredName,\n      city: eneteredCity,\n      street: eneteredStreet,\n      postal: enteredPostal\n    });\n    console.log('run 2');\n  };\n\n  const nameControlClasses = `${classes.control} ${formInputValidity.name ? '' : classes.invalid}`;\n  const streetControlClasses = `${classes.control} ${formInputValidity.street ? '' : classes.invalid}`;\n  const postalCodeControlClasses = `${classes.control} ${formInputValidity.postal ? '' : classes.invalid}`;\n  const cityControlClasses = `${classes.control} ${formInputValidity.city ? '' : classes.invalid}`;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: confirmHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        ref: nameInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), !formInputValidity.name && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Name input field is not valid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 37\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: streetControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"street\",\n        children: \"Street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"street\",\n        ref: streetInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), !formInputValidity.street && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Street input field is not valid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 39\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: postalCodeControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postal\",\n        children: \"Postal Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postal\",\n        ref: postalInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), !formInputValidity.postal && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Postal input field is not valid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 39\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cityControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city\",\n        children: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"city\",\n        ref: cityInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), !formInputValidity.city && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"City input field is not valid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 37\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.submit,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Checkout, \"53M2CtXIBDHBhXa7B2HLRc6wb4M=\");\n\n_c = Checkout;\nexport default Checkout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"sources":["C:/Users/shehr/OneDrive/Desktop/New folder/FoodApp/src/Components/Cart/Checkout.js"],"names":["react","useRef","useState","classes","isEmpty","value","trim","isFiveChars","length","Checkout","props","formInputValidity","setFormInputValidity","name","street","postal","city","nameInput","streetInput","postalInput","cityInput","confirmHandler","event","preventDefault","eneteredName","current","eneteredStreet","enteredPostal","eneteredCity","nameValid","streetValid","postalValid","cityValid","formValid","console","log","onConfirm","nameControlClasses","control","invalid","streetControlClasses","postalCodeControlClasses","cityControlClasses","form","actions","onCancel","submit"],"mappings":"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","sourcesContent":["import react,{useRef,useState} from 'react';\r\nimport classes from './Checkout.module.css';\r\n\r\nconst isEmpty = (value) => value.trim() === '';\r\nconst isFiveChars = (value) => value.trim().length === 5;\r\n\r\n\r\nconst Checkout = (props) => {\r\n    const [formInputValidity,setFormInputValidity] = useState({\r\n        name: true,\r\n        street: true,\r\n        postal: true,\r\n        city: true\r\n    })\r\n    \r\n    const nameInput=useRef()\r\n    const streetInput=useRef()\r\n    const postalInput = useRef()\r\n    const cityInput = useRef()\r\n\r\n    const confirmHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const eneteredName = nameInput.current.value;\r\n    const eneteredStreet = streetInput.current.value;\r\n    const enteredPostal = postalInput.current.value;\r\n    const eneteredCity = cityInput.current.value;\r\n\r\n    // console.log(eneteredName,eneteredCity,eneteredStreet,enteredPostal)\r\n\r\n    const nameValid = !isEmpty(eneteredName);\r\n    const streetValid = !isEmpty(eneteredStreet);\r\n    const postalValid =  isFiveChars(enteredPostal) && !isEmpty(enteredPostal);\r\n    const cityValid = !isEmpty(eneteredCity);\r\n\r\n    // console.log(eneteredName,eneteredCity)\r\n\r\n    // const nameValid = false\r\n    // const streetValid = false\r\n    // const postalValid = false\r\n    // const cityValid = false\r\n\r\n    setFormInputValidity({\r\n        name: nameValid,\r\n        street: streetValid,\r\n        postal: postalValid,\r\n        city: cityValid\r\n    });\r\n\r\n    const formValid = nameValid && streetValid && postalValid && cityValid;\r\n\r\n    if(!formValid){\r\n        return;\r\n    }\r\n    console.log('run 1')\r\n    props.onConfirm({\r\n        name: eneteredName,\r\n        city: eneteredCity,\r\n        street:eneteredStreet,\r\n        postal:enteredPostal})\r\n        console.log('run 2')\r\n\r\n  };\r\n\r\n  const nameControlClasses = `${classes.control} ${\r\n    formInputValidity.name ? '' : classes.invalid\r\n  }`;\r\n  const streetControlClasses = `${classes.control} ${\r\n    formInputValidity.street ? '' : classes.invalid\r\n  }`;\r\n  const postalCodeControlClasses = `${classes.control} ${\r\n    formInputValidity.postal ? '' : classes.invalid\r\n  }`;\r\n  const cityControlClasses = `${classes.control} ${\r\n    formInputValidity.city ? '' : classes.invalid\r\n  }`;\r\n\r\n\r\n\r\n  return (\r\n    <form className={classes.form} onSubmit={confirmHandler}>\r\n      <div className={nameControlClasses}>\r\n        <label htmlFor='name'>Your Name</label>\r\n        <input type='text' id='name' ref={nameInput}  />\r\n        {!formInputValidity.name && <p>Name input field is not valid</p>}\r\n      </div>\r\n      <div className={streetControlClasses}>\r\n        <label htmlFor='street'>Street</label>\r\n        <input type='text' id='street' ref={streetInput} />\r\n        {!formInputValidity.street && <p>Street input field is not valid</p>}\r\n      </div>\r\n      <div className={postalCodeControlClasses}>\r\n        <label htmlFor='postal'>Postal Code</label>\r\n        <input type='text' id='postal' ref={postalInput} />\r\n        {!formInputValidity.postal && <p>Postal input field is not valid</p>}\r\n      </div>\r\n      <div className={cityControlClasses}>\r\n        <label htmlFor='city'>City</label>\r\n        <input type='text' id='city' ref={cityInput} />\r\n        {!formInputValidity.city && <p>City input field is not valid</p>}\r\n      </div>\r\n      <div className={classes.actions}>\r\n        <button type='button' onClick={props.onCancel}>\r\n          Cancel\r\n        </button>\r\n        <button className={classes.submit}>Confirm</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Checkout;"]},"metadata":{},"sourceType":"module"}