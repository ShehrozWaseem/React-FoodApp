{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shehr\\\\OneDrive\\\\Desktop\\\\New folder\\\\FoodApp\\\\src\\\\store\\\\CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport CartContext from './cart-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  total_amt: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    // const updatedItems = state.items.concat(action.item)\n    // const updatedAmt = state.total_amt + action.item.price * action.item.amt\n    // return{\n    //     items: updatedItems,\n    //     total_amt: updatedAmt\n    // }\n    const updatedState = { ...state\n    };\n    const itemIndex = updatedState.items.findIndex(item => item.id === action.item.id);\n\n    if (itemIndex >= 0) {\n      updatedState.items[itemIndex].amt += action.item.amt;\n    } else {\n      updatedState.items.push(action.item);\n    }\n\n    updatedState.total_amt += action.item.amt * action.item.price;\n    return updatedState;\n  }\n\n  return defaultCartState;\n};\n\nfunction CartProvider(props) {\n  _s();\n\n  const [cartState, dispatchCartAciton] = useReducer(cartReducer, defaultCartState);\n\n  const addItemtoHandler = item => {\n    dispatchCartAciton({\n      type: \"ADD\",\n      item: item\n    });\n  };\n\n  const removeItemHandler = id => {\n    dispatchCartAciton({\n      type: \"REMOVE\",\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    amt: cartState.total_amt,\n    addItem: addItemtoHandler,\n    removeItem: removeItemHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CartProvider, \"z3xG3F0bH5DmPrEmvcmTSn+GTm0=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["C:/Users/shehr/OneDrive/Desktop/New folder/FoodApp/src/store/CartProvider.js"],"names":["React","useReducer","CartContext","defaultCartState","items","total_amt","cartReducer","state","action","type","updatedState","itemIndex","findIndex","item","id","amt","push","price","CartProvider","props","cartState","dispatchCartAciton","addItemtoHandler","removeItemHandler","cartContext","addItem","removeItem","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AAIA,MAAMC,gBAAgB,GAAG;AACrBC,EAAAA,KAAK,EAAC,EADe;AAErBC,EAAAA,SAAS,EAAC;AAFW,CAAzB;;AAIA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAOC,MAAP,KAAgB;AAChC,MAAGA,MAAM,CAACC,IAAP,KAAc,KAAjB,EAAuB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,UAAMC,YAAY,GAAG,EAAE,GAAGH;AAAL,KAArB;AAEA,UAAMI,SAAS,GAAGD,YAAY,CAACN,KAAb,CAAmBQ,SAAnB,CACfC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYN,MAAM,CAACK,IAAP,CAAYC,EADlB,CAAlB;;AAIA,QAAIH,SAAS,IAAI,CAAjB,EAAoB;AAClBD,MAAAA,YAAY,CAACN,KAAb,CAAmBO,SAAnB,EAA8BI,GAA9B,IAAqCP,MAAM,CAACK,IAAP,CAAYE,GAAjD;AACD,KAFD,MAEO;AACLL,MAAAA,YAAY,CAACN,KAAb,CAAmBY,IAAnB,CAAwBR,MAAM,CAACK,IAA/B;AACD;;AAEDH,IAAAA,YAAY,CAACL,SAAb,IAA0BG,MAAM,CAACK,IAAP,CAAYE,GAAZ,GAAkBP,MAAM,CAACK,IAAP,CAAYI,KAAxD;AAEA,WAAOP,YAAP;AAEH;;AACD,SAAOP,gBAAP;AACH,CA1BD;;AA6BA,SAASe,YAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AAGzB,QAAM,CAACC,SAAD,EAAWC,kBAAX,IAAiCpB,UAAU,CAACK,WAAD,EAAaH,gBAAb,CAAjD;;AAEA,QAAMmB,gBAAgB,GAAIT,IAAD,IAAS;AAC9BQ,IAAAA,kBAAkB,CAAC;AAACZ,MAAAA,IAAI,EAAC,KAAN;AAAYI,MAAAA,IAAI,EAACA;AAAjB,KAAD,CAAlB;AACH,GAFD;;AAGA,QAAMU,iBAAiB,GAAIT,EAAD,IAAO;AAC7BO,IAAAA,kBAAkB,CAAC;AAACZ,MAAAA,IAAI,EAAC,QAAN;AAAeK,MAAAA,EAAE,EAACA;AAAlB,KAAD,CAAlB;AACH,GAFD;;AAKA,QAAMU,WAAW,GAAG;AAChBpB,IAAAA,KAAK,EAACgB,SAAS,CAAChB,KADA;AAEhBW,IAAAA,GAAG,EAACK,SAAS,CAACf,SAFE;AAGhBoB,IAAAA,OAAO,EAAEH,gBAHO;AAIhBI,IAAAA,UAAU,EAAEH;AAJI,GAApB;AAOF,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEC,WAA7B;AAAA,cACKL,KAAK,CAACQ;AADX;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAzBQT,Y;;KAAAA,Y;AA2BT,eAAeA,YAAf","sourcesContent":["import React , {useReducer} from 'react'\r\nimport CartContext from './cart-context'\r\n\r\n\r\n\r\nconst defaultCartState = {\r\n    items:[],\r\n    total_amt:0\r\n}\r\nconst cartReducer = (state,action)=>{\r\n    if(action.type==='ADD'){\r\n        // const updatedItems = state.items.concat(action.item)\r\n        // const updatedAmt = state.total_amt + action.item.price * action.item.amt\r\n        // return{\r\n        //     items: updatedItems,\r\n        //     total_amt: updatedAmt\r\n        // }\r\n        const updatedState = { ...state };\r\n \r\n        const itemIndex = updatedState.items.findIndex(\r\n          (item) => item.id === action.item.id\r\n        );\r\n     \r\n        if (itemIndex >= 0) {\r\n          updatedState.items[itemIndex].amt += action.item.amt;\r\n        } else {\r\n          updatedState.items.push(action.item);\r\n        }\r\n     \r\n        updatedState.total_amt += action.item.amt * action.item.price;\r\n     \r\n        return updatedState;\r\n      \r\n    }\r\n    return defaultCartState\r\n}\r\n\r\n\r\nfunction CartProvider(props) {\r\n\r\n\r\n    const [cartState,dispatchCartAciton] = useReducer(cartReducer,defaultCartState)\r\n\r\n    const addItemtoHandler = (item) =>{\r\n        dispatchCartAciton({type:\"ADD\",item:item})\r\n    }\r\n    const removeItemHandler = (id) =>{\r\n        dispatchCartAciton({type:\"REMOVE\",id:id})\r\n    }\r\n\r\n\r\n    const cartContext = {\r\n        items:cartState.items,\r\n        amt:cartState.total_amt,\r\n        addItem: addItemtoHandler,\r\n        removeItem: removeItemHandler    \r\n    }\r\n\r\n  return (\r\n    <CartContext.Provider value={cartContext}>\r\n        {props.children}\r\n    </CartContext.Provider>\r\n  )\r\n}\r\n\r\nexport default CartProvider"]},"metadata":{},"sourceType":"module"}