{"ast":null,"code":"import _slicedToArray from\"C:/Users/shehr/OneDrive/Desktop/New folder/FoodApp/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import react,{useRef,useState}from'react';import classes from'./Checkout.module.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var isEmpty=function isEmpty(value){return value.trim()==='';};var isFiveChars=function isFiveChars(value){return value.trim().length===5;};var Checkout=function Checkout(props){var _useState=useState({name:true,street:true,postal:true,city:true}),_useState2=_slicedToArray(_useState,2),formInputValidity=_useState2[0],setFormInputValidity=_useState2[1];var nameInput=useRef();var streetInput=useRef();var postalInput=useRef();var cityInput=useRef();var confirmHandler=function confirmHandler(event){event.preventDefault();var eneteredName=nameInput.current.value;var eneteredStreet=streetInput.current.value;var enteredPostal=postalInput.current.value;var eneteredCity=cityInput.current.value;// console.log(eneteredName,eneteredCity,eneteredStreet,enteredPostal)\nvar nameValid=!isEmpty(eneteredName);var streetValid=!isEmpty(eneteredStreet);var postalValid=isFiveChars(enteredPostal)&&!isEmpty(enteredPostal);var cityValid=!isEmpty(eneteredCity);// console.log(eneteredName,eneteredCity)\n// const nameValid = false\n// const streetValid = false\n// const postalValid = false\n// const cityValid = false\nsetFormInputValidity({name:nameValid,street:streetValid,postal:postalValid,city:cityValid});var formValid=nameValid&&streetValid&&postalValid&&cityValid;if(!formValid){return;}console.log('run 1');props.onConfirm({name:eneteredName,city:eneteredCity,street:eneteredStreet,postal:enteredPostal});console.log('run 2');};var nameControlClasses=\"\".concat(classes.control,\" \").concat(formInputValidity.name?'':classes.invalid);var streetControlClasses=\"\".concat(classes.control,\" \").concat(formInputValidity.street?'':classes.invalid);var postalCodeControlClasses=\"\".concat(classes.control,\" \").concat(formInputValidity.postal?'':classes.invalid);var cityControlClasses=\"\".concat(classes.control,\" \").concat(formInputValidity.city?'':classes.invalid);return/*#__PURE__*/_jsxs(\"form\",{className:classes.form,onSubmit:confirmHandler,children:[/*#__PURE__*/_jsxs(\"div\",{className:nameControlClasses,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"name\",children:\"Your Name\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"name\",ref:nameInput}),!formInputValidity.name&&/*#__PURE__*/_jsx(\"p\",{children:\"Name input field is not valid\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:streetControlClasses,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"street\",children:\"Street\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"street\",ref:streetInput}),!formInputValidity.street&&/*#__PURE__*/_jsx(\"p\",{children:\"Street input field is not valid\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:postalCodeControlClasses,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"postal\",children:\"Postal Code\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"postal\",ref:postalInput}),!formInputValidity.postal&&/*#__PURE__*/_jsx(\"p\",{children:\"Postal input field is not valid\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:cityControlClasses,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"city\",children:\"City\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"city\",ref:cityInput}),!formInputValidity.city&&/*#__PURE__*/_jsx(\"p\",{children:\"City input field is not valid\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:classes.actions,children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:props.onCancel,children:\"Cancel\"}),/*#__PURE__*/_jsx(\"button\",{className:classes.submit,children:\"Confirm\"})]})]});};export default Checkout;","map":{"version":3,"sources":["C:/Users/shehr/OneDrive/Desktop/New folder/FoodApp/src/Components/Cart/Checkout.js"],"names":["react","useRef","useState","classes","isEmpty","value","trim","isFiveChars","length","Checkout","props","name","street","postal","city","formInputValidity","setFormInputValidity","nameInput","streetInput","postalInput","cityInput","confirmHandler","event","preventDefault","eneteredName","current","eneteredStreet","enteredPostal","eneteredCity","nameValid","streetValid","postalValid","cityValid","formValid","console","log","onConfirm","nameControlClasses","control","invalid","streetControlClasses","postalCodeControlClasses","cityControlClasses","form","actions","onCancel","submit"],"mappings":"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","sourcesContent":["import react,{useRef,useState} from 'react';\r\nimport classes from './Checkout.module.css';\r\n\r\nconst isEmpty = (value) => value.trim() === '';\r\nconst isFiveChars = (value) => value.trim().length === 5;\r\n\r\n\r\nconst Checkout = (props) => {\r\n    const [formInputValidity,setFormInputValidity] = useState({\r\n        name: true,\r\n        street: true,\r\n        postal: true,\r\n        city: true\r\n    })\r\n    \r\n    const nameInput=useRef()\r\n    const streetInput=useRef()\r\n    const postalInput = useRef()\r\n    const cityInput = useRef()\r\n\r\n    const confirmHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const eneteredName = nameInput.current.value;\r\n    const eneteredStreet = streetInput.current.value;\r\n    const enteredPostal = postalInput.current.value;\r\n    const eneteredCity = cityInput.current.value;\r\n\r\n    // console.log(eneteredName,eneteredCity,eneteredStreet,enteredPostal)\r\n\r\n    const nameValid = !isEmpty(eneteredName);\r\n    const streetValid = !isEmpty(eneteredStreet);\r\n    const postalValid =  isFiveChars(enteredPostal) && !isEmpty(enteredPostal);\r\n    const cityValid = !isEmpty(eneteredCity);\r\n\r\n    // console.log(eneteredName,eneteredCity)\r\n\r\n    // const nameValid = false\r\n    // const streetValid = false\r\n    // const postalValid = false\r\n    // const cityValid = false\r\n\r\n    setFormInputValidity({\r\n        name: nameValid,\r\n        street: streetValid,\r\n        postal: postalValid,\r\n        city: cityValid\r\n    });\r\n\r\n    const formValid = nameValid && streetValid && postalValid && cityValid;\r\n\r\n    if(!formValid){\r\n        return;\r\n    }\r\n    console.log('run 1')\r\n    props.onConfirm({\r\n        name: eneteredName,\r\n        city: eneteredCity,\r\n        street:eneteredStreet,\r\n        postal:enteredPostal})\r\n        console.log('run 2')\r\n\r\n  };\r\n\r\n  const nameControlClasses = `${classes.control} ${\r\n    formInputValidity.name ? '' : classes.invalid\r\n  }`;\r\n  const streetControlClasses = `${classes.control} ${\r\n    formInputValidity.street ? '' : classes.invalid\r\n  }`;\r\n  const postalCodeControlClasses = `${classes.control} ${\r\n    formInputValidity.postal ? '' : classes.invalid\r\n  }`;\r\n  const cityControlClasses = `${classes.control} ${\r\n    formInputValidity.city ? '' : classes.invalid\r\n  }`;\r\n\r\n\r\n\r\n  return (\r\n    <form className={classes.form} onSubmit={confirmHandler}>\r\n      <div className={nameControlClasses}>\r\n        <label htmlFor='name'>Your Name</label>\r\n        <input type='text' id='name' ref={nameInput}  />\r\n        {!formInputValidity.name && <p>Name input field is not valid</p>}\r\n      </div>\r\n      <div className={streetControlClasses}>\r\n        <label htmlFor='street'>Street</label>\r\n        <input type='text' id='street' ref={streetInput} />\r\n        {!formInputValidity.street && <p>Street input field is not valid</p>}\r\n      </div>\r\n      <div className={postalCodeControlClasses}>\r\n        <label htmlFor='postal'>Postal Code</label>\r\n        <input type='text' id='postal' ref={postalInput} />\r\n        {!formInputValidity.postal && <p>Postal input field is not valid</p>}\r\n      </div>\r\n      <div className={cityControlClasses}>\r\n        <label htmlFor='city'>City</label>\r\n        <input type='text' id='city' ref={cityInput} />\r\n        {!formInputValidity.city && <p>City input field is not valid</p>}\r\n      </div>\r\n      <div className={classes.actions}>\r\n        <button type='button' onClick={props.onCancel}>\r\n          Cancel\r\n        </button>\r\n        <button className={classes.submit}>Confirm</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Checkout;"]},"metadata":{},"sourceType":"module"}