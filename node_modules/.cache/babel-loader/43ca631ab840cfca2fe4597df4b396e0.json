{"ast":null,"code":"import _slicedToArray from\"C:/Users/shehr/OneDrive/Desktop/New folder/FoodApp/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _toConsumableArray from\"C:/Users/shehr/OneDrive/Desktop/New folder/FoodApp/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _objectSpread from\"C:/Users/shehr/OneDrive/Desktop/New folder/FoodApp/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useReducer}from'react';import CartContext from'./cart-context';import{jsx as _jsx}from\"react/jsx-runtime\";var defaultCartState={items:[],total_amt:0};var cartReducer=function cartReducer(state,action){if(action.type==='ADD'){// const updatedItems = state.items.concat(action.item)\n// const updatedAmt = state.total_amt + action.item.price * action.item.amt\n// return{\n//     items: updatedItems,\n//     total_amt: updatedAmt\n// }\nvar updatedState=_objectSpread({},state);var itemIndex=updatedState.items.findIndex(function(item){return item.id===action.item.id;});console.log(itemIndex);if(itemIndex>=0){updatedState.items[itemIndex].amt+=action.item.amt;}else{updatedState.items.push(action.item);}updatedState.total_amt+=action.item.amt*action.item.price;return updatedState;}if(action.type==='REMOVE'){var existingCartItemIndex=state.items.findIndex(function(item){return item.id===action.id;});var existingItem=state.items[existingCartItemIndex];var updatedTotalAmount=state.total_amt-existingItem.price;var updatedItems;if(existingItem.amt===1){updatedItems=state.items.filter(function(item){return item.id!==action.id;});}else{var updatedItem=_objectSpread(_objectSpread({},existingItem),{},{amt:existingItem.amt-1});updatedItems=_toConsumableArray(state.items);updatedItems[existingCartItemIndex]=updatedItem;}return{items:updatedItems,total_amt:updatedTotalAmount};}if(action.type===\"CLEAR\"){return{items:[],total_amt:0};}return defaultCartState;};function CartProvider(props){var _useReducer=useReducer(cartReducer,defaultCartState),_useReducer2=_slicedToArray(_useReducer,2),cartState=_useReducer2[0],dispatchCartAciton=_useReducer2[1];var addItemtoHandler=function addItemtoHandler(item){dispatchCartAciton({type:\"ADD\",item:item});};var removeItemHandler=function removeItemHandler(id){dispatchCartAciton({type:\"REMOVE\",id:id});};var clearCartHanlder=function clearCartHanlder(){dispatchCartAciton({type:\"CLEAR\"});};var cartContext={items:cartState.items,amt:cartState.total_amt,addItem:addItemtoHandler,removeItem:removeItemHandler,clearCart:clearCartHanlder};return/*#__PURE__*/_jsx(CartContext.Provider,{value:cartContext,children:props.children});}export default CartProvider;","map":{"version":3,"sources":["C:/Users/shehr/OneDrive/Desktop/New folder/FoodApp/src/store/CartProvider.js"],"names":["React","useReducer","CartContext","defaultCartState","items","total_amt","cartReducer","state","action","type","updatedState","itemIndex","findIndex","item","id","console","log","amt","push","price","existingCartItemIndex","existingItem","updatedTotalAmount","updatedItems","filter","updatedItem","CartProvider","props","cartState","dispatchCartAciton","addItemtoHandler","removeItemHandler","clearCartHanlder","cartContext","addItem","removeItem","clearCart","children"],"mappings":"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","sourcesContent":["import React , {useReducer} from 'react'\r\nimport CartContext from './cart-context'\r\n\r\n\r\n\r\nconst defaultCartState = {\r\n    items:[],\r\n    total_amt:0\r\n}\r\nconst cartReducer = (state,action)=>{\r\n    if(action.type==='ADD'){\r\n        // const updatedItems = state.items.concat(action.item)\r\n        // const updatedAmt = state.total_amt + action.item.price * action.item.amt\r\n        // return{\r\n        //     items: updatedItems,\r\n        //     total_amt: updatedAmt\r\n        // }\r\n        const updatedState = { ...state };\r\n \r\n        const itemIndex = updatedState.items.findIndex(\r\n          (item) => item.id === action.item.id\r\n        );\r\n        console.log(itemIndex)\r\n     \r\n        if (itemIndex >= 0) {\r\n          updatedState.items[itemIndex].amt += action.item.amt;\r\n        } else {\r\n          updatedState.items.push(action.item);\r\n        }\r\n     \r\n        updatedState.total_amt += action.item.amt * action.item.price;\r\n     \r\n        return updatedState;\r\n      \r\n    }\r\n\r\n    if (action.type === 'REMOVE') {\r\n      const existingCartItemIndex = state.items.findIndex(\r\n        (item) => item.id === action.id\r\n      );\r\n      const existingItem = state.items[existingCartItemIndex];\r\n      const updatedTotalAmount = state.total_amt - existingItem.price;\r\n      let updatedItems;\r\n      if (existingItem.amt === 1) {\r\n        updatedItems = state.items.filter(item => item.id !== action.id);\r\n      } else {\r\n        const updatedItem = { ...existingItem, amt: existingItem.amt - 1 };\r\n        updatedItems = [...state.items];\r\n        updatedItems[existingCartItemIndex] = updatedItem;\r\n      } \r\n      return{\r\n        items:updatedItems,\r\n        total_amt:updatedTotalAmount\r\n      }\r\n    }\r\n  \r\n    if(action.type===\"CLEAR\"){\r\n      return  {\r\n        items:[],\r\n        total_amt:0\r\n    }\r\n    }\r\n    return defaultCartState\r\n}\r\n\r\n\r\nfunction CartProvider(props) {\r\n\r\n\r\n    const [cartState,dispatchCartAciton] = useReducer(cartReducer,defaultCartState)\r\n\r\n    const addItemtoHandler = (item) =>{\r\n        dispatchCartAciton({type:\"ADD\",item:item})\r\n    }\r\n    const removeItemHandler = (id) =>{\r\n        dispatchCartAciton({type:\"REMOVE\",id:id})\r\n    }\r\n    const clearCartHanlder = () =>{\r\n      dispatchCartAciton({type:\"CLEAR\"})\r\n    }\r\n\r\n\r\n    const cartContext = {\r\n        items:cartState.items,\r\n        amt:cartState.total_amt,\r\n        addItem: addItemtoHandler,\r\n        removeItem: removeItemHandler,   \r\n        clearCart: clearCartHanlder \r\n    }\r\n\r\n  return (\r\n    <CartContext.Provider value={cartContext}>\r\n        {props.children}\r\n    </CartContext.Provider>\r\n  )\r\n}\r\n\r\nexport default CartProvider"]},"metadata":{},"sourceType":"module"}